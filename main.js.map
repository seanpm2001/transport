{"version":3,"sources":["./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/typescript/iframes/iframe-demo/iframe-demo.component.ts","./src/app/typescript/iframes/iframe-demo/iframe-demo.component.html","./src/app/shared/quickstart/quickstart.component.ts","./src/app/shared/quickstart/quickstart.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/environments/environment.ts","./src/app/shared/animated-console/animated-console.component.ts","./src/app/shared/animated-console/animated-console.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/models/base.component.ts","./src/app/transport-hero-animation/transport-hero-animation.component.ts","./src/app/transport-hero-animation/transport-hero-animation.component.html","./src/app/shared/shared.module.ts","./src/app/shared/changelog/changelog.component.ts","./src/app/shared/changelog/changelog.component.html","./src/app/shared/model.ts","./src/app/services/highlight.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/environments/version.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'transport-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<clr-header class=\"header-6\">\n  <div class=\"branding\">\n    <a href=\"/transport\">\n        <img src=\"/transport/assets/transport-logo-dark.svg\" class=\"transport-logo\"/>\n      <span class=\"title\">Transport</span>\n    </a>\n  </div>\n  <div class=\"header-nav\" [clr-nav-level]=\"1\">\n    <a routerLink=\"/about\" routerLinkActive=\"active\" class=\"nav-link nav-text\">About</a>\n    <a routerLink=\"/golang\" routerLinkActive=\"active\" class=\"nav-link nav-text\">Golang</a>\n    <a routerLink=\"/java\" routerLinkActive=\"active\" class=\"nav-link nav-text\">Java</a>\n    <a routerLink=\"/ts\" routerLinkActive=\"active\" class=\"nav-link nav-text\">TypeScript</a>\n  </div>\n  <div class=\"header-actions\">\n  </div>\n</clr-header>\n","import { Component, OnInit } from '@angular/core';\nimport {AbstractBase} from \"@vmw/transport/core\";\nimport {ProxyType} from \"@vmw/transport\";\n\n@Component({\n  selector: 'transport-iframe-demo',\n  templateUrl: './iframe-demo.component.html',\n  styleUrls: ['./iframe-demo.component.scss']\n})\nexport class IframeDemoComponent extends AbstractBase implements OnInit {\n\n    public messageCount = 0;\n    public flash = false;\n    public buttonDisabled = false;\n\n    constructor() {\n        super('IFrameDemoComponent');\n    }\n\n    ngOnInit(): void {\n\n        // enable message proxy.\n        this.bus.enableMessageProxy({\n            protectedChannels: ['chatty-chat'],\n            proxyType: ProxyType.Child,\n            parentOrigin: `https://vmware.github.io`,\n            acceptedOrigins: [\n                'http://localhost:4200',\n                'https://vmware.github.io'],\n            targetAllFrames: true,\n            targetSpecificFrames: null,\n        });\n\n        // listen to chatty chat, increment message count for every message that comes in.\n        this.bus.listenStream('chatty-chat')\n            .handle(\n                () => {\n                    // increase message count.\n                    this.messageCount++;\n\n                    // flash message\n                    this.flash = true;\n                    this.bus.api.tickEventLoop(\n                        () => {\n                            // re-enable button and unflash message count after a second.\n                            this.buttonDisabled = false;\n                            this.flash = false;\n                        }, 1000\n                    );\n                }\n            );\n    }\n\n    sendChat(): void {\n\n        if (!this.buttonDisabled) {\n            // disable button.\n            this.buttonDisabled = true;\n\n            // send an empty message to chatty-chat.\n            this.bus.sendResponseMessage('chatty-chat', {});\n        }\n    }\n}\n","<section class=\"chat-container\">\n    <div class=\"message-label\">\n        Messsages Received\n    </div>\n    <div [ngClass]=\"{ 'message-count': true, flash: flash}\">\n        {{messageCount}}\n    </div>\n    <div class=\"broadcast\">\n        <button (click)=\"sendChat()\" class=\"btn btn-primary-outline\" [disabled]=\"buttonDisabled\">Broadcast Something</button>\n    </div>\n</section>\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {Component, Input, OnInit} from '@angular/core';\nimport {BaseComponent} from '../../models/base.component';\nimport {TermCommand} from '../model';\n\n@Component({\n    selector: 'transport-quickstart',\n    templateUrl: './quickstart.component.html',\n    styleUrls: ['./quickstart.component.scss']\n})\nexport class QuickstartComponent extends BaseComponent implements OnInit {\n    @Input() commands: Array<TermCommand>;\n\n    constructor() {\n        super('QuickStartComponent');\n    }\n\n    ngOnInit(): void {\n\n    }\n\n}\n","<section *ngFor=\"let cmd of commands; index as i\">\n    <h4 class=\"code-step\">{{cmd.title}}</h4>\n    <transport-animated-console [inputCommand]=\"cmd.command\"\n                                [helperTxt]=\"cmd.notes\"\n                                [consoleTheme]=\"'macOS'\"\n                                [loopAnimation]=\"false\"\n                                [delay]=\"i * 1000\">\n\n    </transport-animated-console>\n</section>\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'transport-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<clr-main-container>\n    <transport-header></transport-header>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n\n\n            <section id=\"about-content\">\n                <div class=\"about-content-container\">\n                    <div class=\"about-content-cols\">\n\n                        <h1>About Transport</h1>\n                        <h3 class=\"sub-title\">\n                            Transport is a full stack, simple, fast, expandable application event bus for your\n                            applications.\n                        </h3>\n                        <hr/>\n                        <div class=\"clr-row video-list\">\n\n                            <div class=\"clr-col-lg-6 clr-col-md-12 clr-col-sm-12\">\n                                <iframe class=\"video\" src=\"https://www.youtube.com/embed/k-KDPtCQyls\"\n                                        frameborder=\"0\"\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                        allowfullscreen></iframe>\n                            </div>\n\n                            <div class=\"clr-col-lg-6 clr-col-md-12 clr-col-sm-12\">\n                                <p class=\"no-margin\">\n                                    Transport is an event bus, that allows application developers to build components\n                                    that can talk to one another, really easily.\n                                </p>\n\n                                <p>\n                                    It provides a standardized and simple API, implemented in multiple languages, to\n                                    allow any individual component inside your applications\n                                    to talk to one another.\n                                </p>\n                                <p>\n                                    It really comes to life when you use it to send messages, requests, responses and\n                                    events around your backend and front-end. Your Java or Golang backend can stream\n                                    messages to your UI components, as if they were sitting right next to each other.\n                                </p>\n\n                                <p>\n                                    Channels can be extended to major brokers like Kafka or RabbitMQ, so Transport\n                                    becomes an 'on/off-ramp' for your main sources of truth.\n                                </p>\n\n                            </div>\n\n                        </div>\n\n                        <hr/>\n\n                        <h2>Why is using this different from using Kafka or RabbitMQ?</h2>\n                        <h3 class=\"sub-title\">\n                            Transport standardizes, encapsulates and simplifies pub-sub, so you don't have to know it's\n                            there.\n                        </h3>\n                        <p>\n                            Managing observables, subscriptions, connections, sessions, web-sockets, wire protocols,\n                            payloads, transactions, receipts and more is a massive pain in the neck. This is all stuff\n                            and engineer does not want to have to waste time on, when trying to get a backend to stream\n                            data from a backend or service, to a client or UI. Wasting hours and hours trying\n                            to configure, test, debug, discover and wire the required components together.\n                        </p>\n                        <p>\n                            <strong>Transport handles all that for you.</strong>\n                        </p>\n                        <h3 class=\"sub-title\">\n                            Lets use a house as metaphor for your application.\n                        </h3>\n                        <p>\n                            If your want to take a shower, you turn on the tap and water comes out. The water comes from\n                            the main high pressure pipe outside your home in the street. The water makes its way from\n                            the main\n                            pipe in the street, into your house via plumbing, and is then streamed into your shower by a\n                            tap.\n                        </p>\n\n                        <h4>Transport is the equivalent of the <strong>water pipes and taps</strong> in your house.</h4>\n                        <h4>Kafka or RabbitMQ would be the equivalent of the <strong>main pipe</strong> in the street.\n                        </h4>\n\n                        <hr/>\n\n                        <h2>Who created it?</h2>\n                        <h3 class=\"sub-title\">\n                            Transport was created by <a href=\"https://vmware.com\">VMware</a>.\n                        </h3>\n                        <p>\n                            It's used in a number of different products, in multiple\n                            different ways. It was created to solve very real and consistent problems engineers and architects\n                            face when building reactive and event driven, asynchronous applications.\n                        </p>\n\n                    </div>\n                </div>\n            </section>\n\n        </div>\n    </div>\n    <transport-footer></transport-footer>\n</clr-main-container>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {\n    Component,\n    ElementRef, EventEmitter,\n    Input, OnDestroy,\n    OnInit, Output,\n    Renderer2,\n    ViewChild\n} from '@angular/core';\nimport { concat, EMPTY, fromEvent, interval, Observable, of, Subscription, timer } from 'rxjs';\nimport {\n    repeat,\n    switchMapTo,\n    takeWhile,\n    tap,\n    delay\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'transport-animated-console',\n  templateUrl: './animated-console.component.html',\n  styleUrls: ['./animated-console.component.scss']\n})\nexport class AnimatedConsoleComponent implements OnInit, OnDestroy {\n    public static readonly CARET_PROGRESSION_INTERVAL = 50;\n    public static readonly EXECUTION_DELAY = 300;\n    public static readonly ANIMATION_RESET_INTERVAL = 3000;\n    public static readonly COPY_ANIMATION_RESET_INTERVAL = 1500;\n\n    // inputCommand is the command that needs to be animated\n    @Input()\n    public inputCommand: string;\n\n    // consoleMinHeight defines the minimum height of the console body so it prevents the rest of the content\n    // below it from moving according to the console body changing in height\n    @Input()\n    public consoleMinHeight: string;\n\n    // console theme holds a list of classes CSS styling. currently the following options are available:\n    // look and feel:\n    // - blue: enables blue color theme. if omitted, it defaults to the gray/black theme\n    // operation system:\n    // - windows: use the Windows-style title bar\n    // - macOS: use the macOS-style title bar\n    @Input()\n    public consoleTheme = 'blue macOS';\n\n    @Input()\n    public delay: number\n\n    @Input()\n    public loopAnimation = false;\n\n    @Input()\n    public disableAnimation = false;\n\n    @Input()\n    public disableCommandOutput = false;\n\n    @Input()\n    public interactiveMode = false;\n\n    @Input()\n    public cmdOutputObservable: Observable<string> = of('');\n\n    @Input()\n    public helperTxt: string;\n\n    @Output()\n    public cmdExecutionComplete: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChild('cmdInputBox', {read: ElementRef})\n    public cmdInputBox: ElementRef;\n\n    public commandExecuted: boolean;\n    public display: string;\n    public cmdOutput: string[] = [];\n    public copiedToClipboard: boolean;\n    private autotypeSubscription: Subscription;\n\n    constructor(private renderer: Renderer2, private elRef: ElementRef) {\n        this.display = '';\n    }\n\n    // set minimum height if specified by the user through [consoleMinHeight] input parameter. then proceed to\n    // set the terminal to either interactive mode or autotype mode based on [interactiveConsole].\n    ngOnInit(): void {\n        this.renderer.setStyle(\n            this.elRef.nativeElement.querySelector('.console-body'),\n            'min-height', this.consoleMinHeight || 'auto');\n\n        if (this.interactiveMode) {\n            this.interact();\n        } else {\n            // if disableAnimation flag is enabled we project inputCommand into display as static text\n            if (this.disableAnimation) {\n                this.display = this.inputCommand;\n            } else {\n                this.autotype(this.loopAnimation);\n            }\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.autotypeSubscription) {\n            this.autotypeSubscription.unsubscribe();\n        }\n    }\n\n    // interact will set up an event listener to focus on the text input box when clicked anywhere inside the\n    // component so it creates an illusion of typing in a real terminal\n    interact(): void {\n        const inputFocusObs = fromEvent(this.elRef.nativeElement, 'mouseup');\n        inputFocusObs.subscribe(() => {\n            this.cmdInputBox.nativeElement.focus();\n        });\n    }\n\n    // executeLiveCommand will simulate running a live command and printing out its output onto the terminal.\n    // this is done through liveCmdExecutionObservable which is an observable of string type. while this observable\n    // could be used to simulate executing a command, it could be used for live code execution by hooking it up with an\n    // eve platform's channel so that every output log streamed from the websocket could be relayed to the observable.\n    executeLiveCommand(): void {\n        // clear the output first\n        this.cmdOutput = [];\n\n        // if command input is empty, do nothing\n        if (!this.cmdInputBox.nativeElement.value.trim()) {\n            return;\n        }\n\n        // execute the provided function that invokes the command in the backend.\n        this.cmdOutput = [];\n        this.cmdOutputObservable.subscribe((line: string) => {\n            this.cmdOutput.push(line);\n        }, (err) => console.error(err), () => {\n            this.cmdExecutionComplete.emit(this.cmdOutput);\n        });\n    }\n\n    // autotype simulates typing of inputCommand character by character into this.display. once the command has been\n    // completely typed, a little delay will ensue before showing the command outputs that were given as ng-content\n    // content by the user which is 100% customizable. once the output has been printed out, if loop boolean value is\n    // set to true, the output will be cleared and the typing animation will start from beginning after a preset interval.\n    autotype(loop: boolean = false): Subscription {\n        this.display = '';\n\n        const typerObs = interval(AnimatedConsoleComponent.CARET_PROGRESSION_INTERVAL)\n            .pipe(\n                takeWhile((v) => v < this.inputCommand.length)\n            ).pipe(\n                delay(this.delay)\n            );\n\n        const outputsObs = timer(AnimatedConsoleComponent.EXECUTION_DELAY).pipe(\n            switchMapTo<string>(this.cmdOutputObservable),\n            tap(line => {\n                this.cmdOutput.push(line);\n                this.commandExecuted = true;\n            }),\n            switchMapTo(EMPTY)\n        );\n\n        const resetObs = timer(AnimatedConsoleComponent.ANIMATION_RESET_INTERVAL).pipe(\n            tap(() => {\n                if (loop) {\n                    this.commandExecuted = false;\n                    this.cmdOutput = [];\n                }\n            }),\n            switchMapTo(EMPTY));\n\n        this.autotypeSubscription = concat(typerObs, outputsObs, resetObs).pipe(repeat(loop ? -1 : 1))\n            .subscribe((v) => {\n                if (this.display.length === this.inputCommand.length) {\n                    this.display = '';\n                }\n                this.display += this.inputCommand[v];\n            });\n\n        return this.autotypeSubscription;\n    }\n\n    copyToClipboard(): void {\n        const start = this.elRef.nativeElement.querySelector('div.console-body .console-prompt:not(.comment)');\n        const end = this.elRef.nativeElement.querySelector('div.console-body .console-prompt:last-of-type');\n        const range = new Range();\n        window.getSelection().removeAllRanges();\n        range.setStartBefore(start);\n        range.setEndAfter(end);\n        window.getSelection().addRange(range);\n\n        if (window.getSelection().toString().length > 0) {\n            this.copiedToClipboard = true;\n            document.execCommand('copy');\n\n            setTimeout(() => {\n                this.copiedToClipboard = false;\n            }, AnimatedConsoleComponent.COPY_ANIMATION_RESET_INTERVAL);\n        }\n    }\n}\n","<div class=\"console drop-shadow\" [ngClass]=\"consoleTheme\">\n    <div class=\"console-head\">\n        <div class=\"console-control console-control-grayscale\"></div>\n        <div class=\"console-control console-control-grayscale\"></div>\n        <div class=\"console-control console-control-grayscale\"></div>\n        <div class=\"console-control win-control console-control-close\">\n            <clr-icon shape=\"window-close\"></clr-icon>\n        </div>\n        <div class=\"console-control win-control console-control-max\">\n            <clr-icon shape=\"window-max\"></clr-icon>\n        </div>\n        <div class=\"console-control win-control console-control-min\">\n            <clr-icon shape=\"window-min\"></clr-icon>\n        </div>\n    </div>\n    <div class=\"console-body\">\n        <div class=\"copy-to-clipboard-btn-container\">\n            <a class=\"copy-to-clipboard-btn btn btn-link\" (click)=\"copyToClipboard()\">\n                <ng-container *ngIf=\"!copiedToClipboard\">\n                    <clr-icon shape=\"copy-to-clipboard\"></clr-icon> Copy\n                </ng-container>\n                <ng-container *ngIf=\"copiedToClipboard\">\n                    <clr-icon shape=\"check\"></clr-icon> Copied!\n                </ng-container>\n            </a>\n        </div>\n\n        <kbd *ngIf=\"helperTxt && helperTxt.trim().length > 0\" class=\"cmdHelperTxt\">{{ helperTxt }}</kbd>\n        <div class=\"console-prompt\">\n            <kbd *ngIf=\"!interactiveMode\" class=\"cmdInput\">{{ display }}</kbd>\n            <input #cmdInputBox *ngIf=\"interactiveMode\"\n                   [placeholder]=\"inputCommand\"\n                   (keyup.enter)=\"executeLiveCommand()\"\n                   type=\"text\" class=\"cmdInputBox\">\n        </div>\n\n        <ng-container *ngIf=\"!disableCommandOutput\">\n            <kbd *ngIf=\"interactiveMode\" class=\"output-text\">\n                <div *ngFor=\"let out of cmdOutput\">\n                    {{ out }}\n                </div>\n            </kbd>\n            <kbd *ngIf=\"!interactiveMode && commandExecuted\" class=\"output-text\">\n                <ng-content></ng-content>\n            </kbd>\n        </ng-container>\n    </div>\n</div>\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {AfterViewChecked, Component, OnChanges, OnInit} from '@angular/core';\nimport {BaseComponent} from '../models/base.component';\nimport {HighlightService} from \"@vmw/transport-docs/services/highlight.service\";\nimport {goTerminalCommands, javaTerminalCommands, tsTerminalCommands} from \"@vmw/transport-docs/shared/model\";\n\n@Component({\n    selector: 'app-welcome',\n    templateUrl: './welcome.component.html',\n    styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent extends BaseComponent implements OnInit, AfterViewChecked {\n\n    public goCommands: Array<TermCommand>;\n    public javaCommands: Array<TermCommand>;\n    public tsCommands: Array<TermCommand>;\n    public highlighted = false;\n\n    constructor(private highlightService: HighlightService) {\n        super('WelcomeComponent');\n    }\n\n    highlight() {\n        this.highlightService.highlightAll();\n    }\n\n    ngOnInit(): void {\n       this.goCommands = goTerminalCommands;\n       this.tsCommands = tsTerminalCommands;\n       this.javaCommands = javaTerminalCommands;\n\n    }\n\n    ngAfterViewChecked() {\n        if (!this.highlighted) {\n            this.highlightService.highlightAll();\n            this.highlighted = true;\n        }\n    }\n}\n\nexport interface TermCommand {\n    title: string;\n    command: string;\n    notes: string;\n}\n","<clr-main-container>\n    <transport-header></transport-header>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            <section class=\"transport-hero\">\n\n                <div class=\"transport-hero-content\">\n\n                    <h1>\n                        <img src=\"assets/transport-logo-dark.svg\" class=\"transport-logo\"/>\n                        Transport\n                    </h1>\n                    <h2>The event bus you've been looking for.</h2>\n\n                    <section class=\"action-buttons\">\n                        <a routerLink=\"/about\">\n                            <button class=\"btn btn-primary btn-\">\n                                About\n                            </button>\n                        </a>\n\n                        <a href=\"https://github.com/vmware/transport\">\n                            <button class=\"btn btn-primary-outline\">\n                                Github\n                            </button>\n                        </a>\n                    </section>\n                </div>\n                <div class=\"transport-hero-cover\"></div>\n                <transport-hero-animation></transport-hero-animation>\n            </section>\n\n            <section id=\"welcome-content\">\n                <div class=\"welcome-content-container\">\n                    <div class=\"welcome-content-cols\">\n                        <h1>\n                            Get started in 10 seconds.\n                        </h1>\n                        <div class=\"clr-row\">\n                            <div class=\"clr-col-12 tabbed-console-content\">\n                                <clr-tabs>\n                                    <clr-tab>\n                                        <button clrTabLink id=\"go-link\">Go</button>\n                                        <clr-tab-content id=\"go-tab\">\n                                            <section class=\"source-link\">\n                                                <img src=\"assets/github.png\" alt=\"github\" title=\"transport on github\" class=\"github-logo\"/>\n                                                <a href=\"https://github.com/vmware/transport-typescript\">View Golang source on Github</a>\n                                            </section>\n\n                                            <br/>\n                                            <section *ngFor=\"let cmd of goCommands; index as i\">\n                                                <h4 class=\"code-step\">{{cmd.title}}</h4>\n                                                <transport-animated-console [inputCommand]=\"cmd.command\"\n                                                                            [helperTxt]=\"cmd.notes\"\n                                                                            [consoleTheme]=\"'macOS'\"\n                                                                            [loopAnimation]=\"false\"\n                                                                            [delay]=\"i * 1000\">\n                                                </transport-animated-console>\n\n                                            </section>\n\n                                            <h4 class=\"code-step\">Ready for more?</h4>\n                                            <a routerLink=\"/golang\" class=\"btn btn-primary btn-block btn-outline\">read the golang documentation</a>\n\n\n\n                                        </clr-tab-content>\n                                    </clr-tab>\n                                    <clr-tab>\n                                        <button clrTabLink id=\"java-link\">Java</button>\n                                        <clr-tab-content id=\"java-tab\">\n                                            <section class=\"source-link\">\n                                                <img src=\"assets/github.png\" alt=\"github\" title=\"transport on github\" class=\"github-logo\"/>\n                                                <a href=\"https://github.com/vmware/transport-java\">View Java source on Github</a>\n                                            </section>\n                                            <br/>\n                                            <section *ngFor=\"let cmd of javaCommands; index as i\">\n                                                <h4 class=\"code-step\">{{cmd.title}}</h4>\n                                                <transport-animated-console [inputCommand]=\"cmd.command\"\n                                                                            [helperTxt]=\"cmd.notes\"\n                                                                            [consoleTheme]=\"'macOS'\"\n                                                                            [loopAnimation]=\"false\"\n                                                                            [delay]=\"i * 1000\">\n                                                </transport-animated-console>\n                                            </section>\n\n                                            <h4 class=\"code-step\">Ready for more?</h4>\n                                            <a routerLink=\"/java\" class=\"btn btn-primary btn-block btn-outline\">read the java documentation</a>\n\n                                        </clr-tab-content>\n                                    </clr-tab>\n                                    <clr-tab>\n                                        <button clrTabLink id=\"typescript-link\" (click)=\"highlight\">TypeScript</button>\n                                        <clr-tab-content id=\"typescript-tab\">\n                                            <section class=\"source-link\">\n                                                <img src=\"assets/github.png\" alt=\"github\" title=\"transport on github\" class=\"github-logo\"/>\n                                                <a href=\"https://github.com/vmware/transport-typescript\">View TypeScript source on Github</a>\n                                            </section>\n                                            <br/>\n                                            <section *ngFor=\"let cmd of tsCommands; index as i\">\n                                                <h4 class=\"code-step\">{{cmd.title}}</h4>\n                                                <transport-animated-console [inputCommand]=\"cmd.command\"\n                                                                            [helperTxt]=\"cmd.notes\"\n                                                                            [consoleTheme]=\"'macOS'\"\n                                                                            [loopAnimation]=\"false\"\n                                                                            [delay]=\"i * 1000\">\n                                                </transport-animated-console>\n                                            </section>\n                                            <h4 class=\"code-step\">Step 2: Import the code</h4>\n                                            <pre class=\"code\"><code class=\"language-typescript\" ngNonBindable> import &#123; EventBus &#125; from '@vmw/transport';</code></pre>\n\n                                            <h4 class=\"code-step\">Step 3: Hello World</h4>\n\n                                            <pre class=\"code\"><code class=\"language-typescript\">// listen for requests on 'my-channel' and return a response.\nthis.bus.respondOnce('my-channel')\n    .generate(\n        (request: string) => &#123;\n            this.log.info(`Request Received: $&#123;request&#125;, Sending Response...`);\n            return 'world';\n        &#125;\n    );\n\n// send request 'hello' on channel 'my-channel'.\nthis.bus.requestOnce('my-channel', 'hello')\n    .handle(\n        (response: string) => &#123;\n            this.log.info(`hello $&#123;response&#125;`);\n        &#125;\n    );\n</code></pre>\n                                            <h4 class=\"code-step\">Ready for more?</h4>\n                                            <a routerLink=\"/ts\" class=\"btn btn-primary btn-block btn-outline\">read the typescript documentation</a>\n                                        </clr-tab-content>\n                                    </clr-tab>\n                                </clr-tabs>\n\n                                <hr/>\n\n                                <h4 class=\"code-step\">Watch a quick video</h4>\n                                <iframe class=\"video\" src=\"https://www.youtube.com/embed/k-KDPtCQyls\"\n                                        frameborder=\"0\"\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                        allowfullscreen></iframe>\n\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </section>\n\n\n        </div>\n    </div>\n    <transport-footer></transport-footer>\n</clr-main-container>\n\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {AbstractBase} from \"@vmw/transport/core\";\n\nexport abstract class BaseComponent extends AbstractBase {\n\n}\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport {BaseComponent} from \"../models/base.component\";\nimport Snap from 'snapsvg-cjs';\nimport mina from 'snapsvg-cjs';\n\n@Component({\n  selector: 'transport-hero-animation',\n  templateUrl: './transport-hero-animation.component.html',\n  styleUrls: ['./transport-hero-animation.component.scss']\n})\nexport class TransportHeroAnimationComponent extends BaseComponent implements OnInit, OnDestroy {\n\n    private intervalTimers: Array<number> = [];\n\n    private MIN_ANIMATE: number = 1000;\n    private MAX_ANIMATE: number = 2100;\n    private MIN_DELAY: number = 4500;\n    private MAX_DELAY: number = 7000;\n\n    private MIN_STAGGER: number = 350;\n    private MAX_STAGGER: number = 1200;\n\n    public pinkPath1: any;\n    public pinkPath2: any;\n    public pinkPath3: any;\n    public purplePath: any;\n    public bluePath1: any;\n    public bluePath2: any;\n    public lightBluePath1: any;\n    public lightBluePath2: any;\n    public pinkMessage: any;\n    public purpleMessage: any;\n    public blueMessage: any;\n    public lightBlueMessage: any;\n    public hero: any;\n\n\n    public bluePath1Interval: number;\n    public bluePath2Interval: number;\n    public lightBluePath1Interval: number;\n    public lightBluePath2Interval: number;\n    public pinkPath1Interval: number;\n    public pinkPath2Interval: number;\n    public pinkPath3Interval: number;\n    public purplePathInterval: number;\n\n    constructor(private ngZone: NgZone) {\n        super('WelcomeComponent');\n    }\n\n    ngOnInit(): void {\n        this.hero = Snap('#transport-hero-banner');\n        if (this.hero != null) {\n            this.pinkPath1 = this.hero.select(\"#pink-path-1\");\n            this.pinkPath2 = this.hero.select(\"#pink-path-2\");\n            this.pinkPath3 = this.hero.select(\"#pink-path-3\");\n            this.bluePath1 = this.hero.select(\"#blue-path-1\");\n            this.bluePath2 = this.hero.select(\"#blue-path-2\");\n            this.purplePath = this.hero.select(\"#purple-path\");\n            this.lightBluePath1 = this.hero.select(\"#light-blue-path-1\");\n            this.lightBluePath2 = this.hero.select(\"#light-blue-path-2\");\n            this.pinkMessage = this.hero.select(\"#pink-message\");\n            this.blueMessage = this.hero.select(\"#blue-message\");\n            this.purpleMessage = this.hero.select(\"#purple-message\");\n            this.lightBlueMessage = this.hero.select(\"#light-blue-message\");\n\n            // hide paths\n            this.bluePath1.attr({\n                display: \"none\"\n            });\n            this.bluePath2.attr({\n                display: \"none\"\n            });\n\n            this.lightBluePath1.attr({\n                display: \"none\"\n            });\n            this.lightBluePath2.attr({\n                display: \"none\"\n            });\n\n            this.pinkPath1.attr({\n                display: \"none\"\n            });\n\n            this.pinkPath2.attr({\n                display: \"none\"\n            });\n\n            this.pinkPath3.attr({\n                display: \"none\"\n            });\n\n\n            this.purplePath.attr({\n                display: \"none\"\n            });\n\n\n            this.startAnimations();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.intervalTimers.forEach(clearInterval);\n    }\n\n    public startAnimations(): void {\n        this.ngZone.runOutsideAngular(() => {\n            this.pinkPath1Interval = setInterval(\n                () => {\n                    this.runPinkLine1Message()\n                }, 8000\n            );\n\n            this.pinkPath2Interval = setInterval(\n                () => {\n                    this.runPinkLine2Message()\n                }, this.getRandomValue(this.MIN_DELAY, this.MAX_DELAY)\n            );\n            this.pinkPath3Interval = setInterval(\n                () => {\n                    this.runPinkLine3Message()\n                }, this.getRandomValue(this.MIN_DELAY, this.MAX_DELAY)\n            );\n            this.bluePath1Interval = setInterval(\n                () => {\n                    this.runBlueLine1Message()\n                }, this.getRandomValue(this.MIN_DELAY, this.MAX_DELAY)\n            );\n            this.bluePath2Interval = setInterval(\n                () => {\n                    this.runBlueLine2Message()\n                }, this.getRandomValue(this.MIN_DELAY, this.MAX_DELAY)\n            );\n            this.lightBluePath1Interval = setInterval(\n                () => {\n                    this.runLightBlueLine1Message();\n                }, this.getRandomValue(this.MIN_DELAY, this.MAX_DELAY)\n            );\n            this.lightBluePath2Interval = setInterval(\n                () => {\n                    this.runLightBlueLine1Message();\n                }, this.getRandomValue(this.MIN_DELAY, this.MAX_DELAY)\n            );\n            this.purplePathInterval = setInterval(\n                () => {\n                    this.runPurpleMessage();\n                }, this.getRandomValue(this.MIN_DELAY, this.MAX_DELAY)\n            );\n\n            this.runPinkLine1Message();\n\n            this.intervalTimers.push(\n                this.pinkPath1Interval,\n                this.pinkPath2Interval,\n                this.pinkPath3Interval,\n                this.bluePath1Interval,\n                this.bluePath2Interval,\n                this.lightBluePath1Interval,\n                this.lightBluePath2Interval,\n                this.purplePathInterval\n            );\n\n            this.bus.api.tickEventLoop(\n                () => {\n                    this.runPinkLine2Message()\n                }, this.getRandomValue(this.MIN_STAGGER, this.MAX_STAGGER)\n            );\n\n            this.bus.api.tickEventLoop(\n                () => {\n                    this.runPinkLine3Message()\n                }, this.getRandomValue(this.MIN_STAGGER, this.MAX_STAGGER)\n            );\n\n            this.bus.api.tickEventLoop(\n                () => {\n                    this.runBlueLine1Message();\n                    this.runPurpleMessage()\n                }, this.getRandomValue(this.MIN_STAGGER, this.MAX_STAGGER)\n            );\n\n            this.bus.api.tickEventLoop(\n                () => {\n                    this.runBlueLine2Message();\n                }, this.getRandomValue(this.MIN_STAGGER, this.MAX_STAGGER)\n            );\n\n            this.bus.api.tickEventLoop(\n                () => {\n                    this.runLightBlueLine1Message()\n                }, this.getRandomValue(this.MIN_STAGGER, this.MAX_STAGGER)\n            );\n\n            this.bus.api.tickEventLoop(\n                () => {\n                    this.runLightBlueLine2Message()\n                }, this.getRandomValue(this.MIN_STAGGER, this.MAX_STAGGER)\n            );\n        });\n    }\n\n    public runPurpleMessage(): void {\n        let msg = this.pinkMessage.clone().children()[0];\n        this.runLine(msg, this.purplePath, this.getRandomValue(this.MIN_ANIMATE, this.MAX_ANIMATE))\n    }\n\n    public runBlueLine1Message(): void {\n        let msg = this.lightBlueMessage.clone().children()[0];\n        this.runLine(msg, this.bluePath1, this.getRandomValue(this.MIN_ANIMATE, this.MAX_ANIMATE))\n    }\n\n    public runLightBlueLine1Message(): void {\n        let msg = this.blueMessage.clone().children()[0];\n        this.runLine(msg, this.lightBluePath1, this.getRandomValue(this.MIN_ANIMATE, this.MAX_ANIMATE))\n    }\n\n    public runLightBlueLine2Message(): void {\n        let msg = this.blueMessage.clone().children()[0];\n        this.runLine(msg, this.lightBluePath2, this.getRandomValue(this.MIN_ANIMATE, this.MAX_ANIMATE))\n    }\n\n    public runBlueLine2Message(): void {\n        let msg = this.lightBlueMessage.clone().children()[0];\n        this.runLine(msg, this.bluePath2, this.getRandomValue(this.MIN_ANIMATE, this.MAX_ANIMATE))\n    }\n\n    public runPinkLine1Message(): void {\n        let msg = this.purpleMessage.clone().children()[0];\n        this.runLine(msg, this.pinkPath1, this.getRandomValue(this.MIN_ANIMATE, this.MAX_ANIMATE))\n    }\n\n    public runPinkLine2Message(): void {\n        let msg = this.purpleMessage.clone().children()[0];\n        this.runLine(msg, this.pinkPath2, this.getRandomValue(this.MIN_ANIMATE, this.MAX_ANIMATE))\n    }\n\n    public runPinkLine3Message(): void {\n        let msg = this.purpleMessage.clone().children()[0];\n        this.runLine(msg, this.pinkPath3, this.getRandomValue(this.MIN_ANIMATE, this.MAX_ANIMATE))\n\n    }\n\n    public getRandomValue(min: number, max: number): number {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n\n    public runLine(msg, path, duration): void {\n        msg.transform('t-685.99,108')\n        Snap.animate(0, Snap.path.getTotalLength(path), (l) => {\n            let dot = path.getPointAtLength(l);\n            msg.attr(\n                {\n                    cx: dot.x,\n                    cy: dot.y,\n                }\n            )\n        }, duration, mina.easeinout)\n    }\n\n}\n","<div class=\"transport-hero-background\">\n    <svg id=\"transport-hero-banner\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 1211.01 571\">\n        <defs>\n            <radialGradient id=\"radial-gradient\" cx=\"1095.02\" cy=\"189.57\" r=\"67.25\" gradientTransform=\"translate(-720.05 82.75) scale(1.05 1.23)\" gradientUnits=\"userSpaceOnUse\">\n                <stop offset=\"0\" stop-color=\"#b3edff\"/>\n                <stop offset=\"0.22\" stop-color=\"#aee9fc\"/>\n                <stop offset=\"0.36\" stop-color=\"#a8e5f8\"/>\n                <stop offset=\"0.43\" stop-color=\"#a1e0f3\"/>\n                <stop offset=\"0.54\" stop-color=\"#8cd0e7\"/>\n                <stop offset=\"0.68\" stop-color=\"#6bb8d3\"/>\n                <stop offset=\"0.83\" stop-color=\"#3c95b6\"/>\n                <stop offset=\"0.99\" stop-color=\"#026992\"/>\n                <stop offset=\"1\" stop-color=\"#006891\"/>\n            </radialGradient>\n            <radialGradient id=\"radial-gradient-2\" cx=\"658.78\" cy=\"250.44\" r=\"73.35\" gradientTransform=\"matrix(1, 0, 0, 1, 0, 0)\" xlink:href=\"#radial-gradient\"/>\n            <radialGradient id=\"radial-gradient-3\" cx=\"529.5\" cy=\"262.44\" r=\"71.71\" gradientTransform=\"matrix(-1, 0, 0, 1, 1192.01, 108)\" xlink:href=\"#radial-gradient\"/>\n            <radialGradient id=\"radial-gradient-4\" cx=\"315.01\" cy=\"315\" r=\"29\" gradientTransform=\"matrix(1, 0, 0, 1, 0, 0)\" xlink:href=\"#radial-gradient\"/>\n            <radialGradient id=\"radial-gradient-5\" cx=\"524.76\" cy=\"316.75\" r=\"59.25\" gradientTransform=\"matrix(1, 0, 0, 1, 0, 0)\" xlink:href=\"#radial-gradient\"/>\n            <radialGradient id=\"radial-gradient-6\" cx=\"760.01\" cy=\"206\" r=\"36\" gradientTransform=\"matrix(1, 0, 0, 1, 0, 0)\" xlink:href=\"#radial-gradient\"/>\n            <radialGradient id=\"radial-gradient-7\" cx=\"775.01\" cy=\"426\" r=\"43\" gradientTransform=\"matrix(1, 0, 0, 1, 0, 0)\" xlink:href=\"#radial-gradient\"/>\n        </defs>\n        <g id=\"right-channels\">\n            <polyline id=\"right-blue-pipe\" points=\"766.51 396.5 1085.01 396.5 1167.51 504.5 1167.51 517\" style=\"fill: none;stroke: #175f75;stroke-linejoin: round;stroke-width: 41px\"/>\n            <polyline id=\"right-pink-pipe\" points=\"788.51 199.5 1107.01 199.5 1190.51 99.5 1190.51 90\" style=\"fill: none;stroke: #88599e;stroke-miterlimit: 10;stroke-width: 41px\"/>\n            <polyline id=\"right-light-blue-pipe\" points=\"776.01 451.5 1055.01 451.5 1098.51 507.5 1114.51 530.5\" style=\"fill: none;stroke: #2789af;stroke-linejoin: round;stroke-width: 41px\"/>\n        </g>\n        <g id=\"left-channels\">\n            <path id=\"left-purple-pipe\" d=\"M943.5,400V227.23a10.18,10.18,0,0,0-3-7.22L700.5-20.5\" transform=\"translate(-685.99 108)\" style=\"fill: none;stroke: #491d5e;stroke-miterlimit: 10;stroke-width: 41px\"/>\n            <path id=\"left-pink-pipe\" d=\"M995.5,400V203.23a10.18,10.18,0,0,0-3-7.22L772-25\" transform=\"translate(-685.99 108)\" style=\"fill: none;stroke: #88599e;stroke-miterlimit: 10;stroke-width: 41px\"/>\n        </g>\n        <g id=\"main-bus\">\n            <line id=\"middle-light-blue-pipe\" x1=\"524.51\" y1=\"507\" x2=\"524.51\" y2=\"106\" style=\"fill: none;stroke: #2789af;stroke-miterlimit: 10;stroke-width: 41px\"/>\n            <line id=\"middle-blue-pipe\" x1=\"569.51\" y1=\"507\" x2=\"569.51\" y2=\"106\" style=\"fill: none;stroke: #175f75;stroke-miterlimit: 10;stroke-width: 41px\"/>\n            <line id=\"middle-pink-pipe\" x1=\"479.51\" y1=\"507\" x2=\"479.51\" y2=\"106\" style=\"fill: none;stroke: #88599e;stroke-miterlimit: 10;stroke-width: 41px\"/>\n        </g>\n        <g id=\"pipes\">\n            <line id=\"middle-pipe\" x1=\"326.01\" y1=\"316.75\" x2=\"525.01\" y2=\"316.75\" style=\"stroke: #002635;stroke-miterlimit: 10;stroke-width: 45px;fill: url(#radial-gradient)\"/>\n            <line id=\"top-right-pipe\" x1=\"565.51\" y1=\"295.84\" x2=\"752.06\" y2=\"205.05\" style=\"stroke: #002635;stroke-miterlimit: 10;stroke-width: 45px;fill: url(#radial-gradient-2)\"/>\n            <line id=\"bottom-right-pipe\" x1=\"569.51\" y1=\"330\" x2=\"755.51\" y2=\"410.88\" style=\"stroke: #002635;stroke-miterlimit: 10;stroke-width: 45px;fill: url(#radial-gradient-3)\"/>\n        </g>\n        <g id=\"messages\">\n            <g id=\"purple-message\">\n                <circle cx=\"300.01\" cy=\"68\" r=\"17\" style=\"fill: #491d5e\"/>\n            </g>\n            <g id=\"pink-message\">\n                <circle cx=\"262.01\" cy=\"68\" r=\"17\" style=\"fill: #8959a5\"/>\n            </g>\n            <g id=\"blue-message\">\n                <circle cx=\"338.01\" cy=\"68\" r=\"17\" style=\"fill: #105666\"/>\n            </g>\n            <g id=\"light-blue-message\">\n                <circle cx=\"377.01\" cy=\"68\" r=\"17\" style=\"fill: #328c9b\"/>\n            </g>\n        </g>\n        <g id=\"nodes\">\n            <circle id=\"left-node\" cx=\"315.01\" cy=\"315\" r=\"29\" style=\"stroke: #002635;stroke-miterlimit: 10;stroke-width: 10px;fill: url(#radial-gradient-4)\"/>\n            <circle id=\"middle-node\" cx=\"524.76\" cy=\"316.75\" r=\"59.25\" style=\"stroke: #002635;stroke-miterlimit: 10;stroke-width: 16px;fill: url(#radial-gradient-5)\"/>\n            <circle id=\"top-right-node\" cx=\"760.01\" cy=\"206\" r=\"36\" style=\"stroke: #002635;stroke-miterlimit: 10;stroke-width: 16px;fill: url(#radial-gradient-6)\"/>\n            <circle id=\"bottom-right-node\" cx=\"775.01\" cy=\"426\" r=\"43\" style=\"stroke: #002635;stroke-miterlimit: 10;stroke-width: 16px;fill: url(#radial-gradient-7)\"/>\n        </g>\n        <g id=\"paths\">\n            <path id=\"pink-path-1\" d=\"M691-108,994.68,200.58a21.79,21.79,0,0,0,15.33,6.5l200.74,1.67,233.4-112.42A24.19,24.19,0,0,1,1454.38,94L1793,91.5,1895-33\" transform=\"translate(-685.99 108)\" style=\"fill: none\"/>\n            <path id=\"blue-path-1\" d=\"M1853.5,429.68V401.31a14.24,14.24,0,0,0-2.92-8.63L1774.45,293a11.48,11.48,0,0,0-9.13-4.52H1487.15a11.12,11.12,0,0,0-8.48,3.93L1468,305.08a12.35,12.35,0,0,1-14.38,3.34L1263,225.26a11.62,11.62,0,0,1-7-10.64V-14.21\" transform=\"translate(-685.99 108)\" style=\"fill: none\"/>\n            <path id=\"light-blue-path-1\" d=\"M1211,412.07V-.08a15.33,15.33,0,0,0-7.66-13.27L1171-32\" transform=\"translate(-685.99 108)\" style=\"fill: none\"/>\n            <path id=\"pink-path-2\" d=\"M1165.5,409V223.48A14.48,14.48,0,0,0,1151,209H1006.87a14.16,14.16,0,0,1-10-4.15L741-57\" transform=\"translate(-685.99 108)\" style=\"fill: none\"/>\n            <path id=\"purple-path\" d=\"M691.7-29.25,938.18,217.23A18.07,18.07,0,0,1,943.47,230V417.79\" transform=\"translate(-685.99 108)\" style=\"fill: none\"/>\n            <path id=\"pink-path-3\" d=\"M1165.5-29,1165,194.35A12.68,12.68,0,0,1,1152.35,207H1007.67a12.17,12.17,0,0,0-12.17,12.17V463\" transform=\"translate(-685.99 108)\" style=\"fill: none\"/>\n            <path id=\"blue-path-2\" d=\"M1255.5,405.46V231a5.86,5.86,0,0,1,8.23-5.36L1450.3,308a16,16,0,0,0,13.31-.2l37.79-18.1a12.8,12.8,0,0,1,5.48-1.24h255.76a12.6,12.6,0,0,1,9.9,4.82l78,99.42a13.84,13.84,0,0,1,3,8.54v35.89\" transform=\"translate(-685.99 108)\" style=\"fill: none\"/>\n            <path id=\"light-blue-path-2\" d=\"M1800.5,422.5l-55.65-73.89a12.83,12.83,0,0,0-10.24-5.11H1480a13.22,13.22,0,0,1-9.35-3.88L1430.26,299a13.2,13.2,0,0,0-4.4-2.93L1222.2,213.3a8.16,8.16,0,0,0-11.23,7.54L1210.5,420\" transform=\"translate(-685.99 108)\" style=\"fill: none\"/>\n        </g>\n    </svg>\n</div>\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ClarityModule} from '@clr/angular';\nimport {RouterModule} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HeaderComponent} from './header/header.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {AnimatedConsoleComponent} from './animated-console/animated-console.component';\nimport {HighlightService} from '../services/highlight.service';\nimport {QuickstartComponent} from './quickstart/quickstart.component';\nimport { ChangelogComponent } from './changelog/changelog.component';\n\n@NgModule({\n    declarations: [\n        HeaderComponent,\n        FooterComponent,\n        AnimatedConsoleComponent,\n        QuickstartComponent,\n        ChangelogComponent,\n    ],\n    imports: [\n        CommonModule,\n        ClarityModule,\n        RouterModule,\n        FormsModule,\n        ReactiveFormsModule,\n    ],\n    exports: [\n        HeaderComponent,\n        FooterComponent,\n        AnimatedConsoleComponent,\n        QuickstartComponent,\n    ],\n    providers: [HighlightService]\n})\nexport class SharedModule {\n}\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {Component, Input, OnInit} from '@angular/core';\nimport { ClrDatagridComparatorInterface, ClrDatagridSortOrder } from '@clr/angular';\nimport { ChangelogEntry } from './changelog.model';\n\nexport class VersionComparator implements ClrDatagridComparatorInterface<ChangelogEntry> {\n    compare(a: ChangelogEntry, b: ChangelogEntry) {\n        const pa = a.version.split('.');\n        const pb = b.version.split('.');\n        for (let i = 0; i < 3; i++) {\n            let na = Number(pa[i]);\n            let nb = Number(pb[i]);\n            if (na > nb) return 1;\n            if (nb > na) return -1;\n            if (!isNaN(na) && isNaN(nb)) return 1;\n            if (isNaN(na) && !isNaN(nb)) return -1;\n        }\n        return 0;\n    }\n}\n\n@Component({\n    selector: 'transport-changelog',\n    templateUrl: './changelog.component.html',\n    styleUrls: ['./changelog.component.scss']\n})\nexport class ChangelogComponent implements OnInit {\n    @Input() changelog: Array<ChangelogEntry> = [];\n\n    versionComparator = new VersionComparator();\n    ClrDatagridSortOrder = ClrDatagridSortOrder;\n    loading = true;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\">\n    <clr-dg-column [clrDgSortOrder]=\"ClrDatagridSortOrder.DESC\">Version</clr-dg-column>\n    <clr-dg-column>Date</clr-dg-column>\n    <clr-dg-column>Notes</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let log of changelog\">\n        <clr-dg-cell>{{log.version}}</clr-dg-cell>\n        <clr-dg-cell>{{log.date | date}}</clr-dg-cell>\n        <clr-dg-cell>\n            <ul class=\"list\">\n                <li *ngFor=\"let note of log.notes\">\n                    {{note.description}}\n                    <a href=\"{{note.review_uri}}\" *ngIf=\"note.review_uri != null\">| Code Review</a>\n                </li>\n            </ul>\n        </clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>{{changelog.length}} Releases</clr-dg-footer>\n</clr-datagrid>\n\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\n\nexport interface TermCommand {\n    title: string;\n    command: string;\n    notes: string;\n}\n export const goTerminalCommands = [\n    {\n        title: 'Step 1: Get the code',\n        command: 'git clone https://github.com/vmware/transport-go.git',\n        notes: 'Pull down the transport-go code from github'\n    },\n    {\n        title: 'Step 2: Build the code',\n        command: './build-transport.sh',\n        notes: 'Build the transport-go sample server and example services'\n    },\n    {\n        title: 'Step 3: Run the code',\n        command: './transport service&',\n        notes: 'Start the transport-go sample services'\n    },\n    {\n        title: 'Step 4: Play with the code',\n        command: './transport demo',\n        notes: 'Run a simple example that connects to the sample service and makes a request'\n    },\n];\n\n export const javaTerminalCommands = [\n    {\n        title: 'Step 1: Get the code',\n        command: 'git clone https://github.com/vmware/transport-java.git',\n        notes: 'Pull down the transport-java code from github'\n    },\n    {\n        title: 'Step 2: Run the code',\n        command: './gradlew :sample-app:bootRun',\n        notes: 'Build the example application and watch the logs'\n    },\n    {\n        title: 'Step 3: Play with the code',\n        command: 'ls sample-app/src/main/java/samples',\n        notes: 'Explore the various examples, see how they work'\n    }\n];\n\n export const tsTerminalCommands = [\n    {\n        title: 'Step 1:  Install the code',\n        command: 'npm install @vmw/transport --save',\n        notes: 'Install transport-typescript into your app'\n    },\n];\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Injectable, Inject } from '@angular/core';\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport 'clipboard';\n\nimport 'prismjs';\nimport 'prismjs/plugins/toolbar/prism-toolbar';\nimport 'prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard';\nimport 'prismjs/plugins/line-highlight/prism-line-highlight';\n\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-java';\nimport 'prismjs/components/prism-go';\nimport 'prismjs/components/prism-json';\nimport 'prismjs/components/prism-markup';\nimport 'prismjs/components/prism-markdown';\nimport 'prismjs/components/prism-yaml';\nimport 'prismjs/components/prism-typescript';\nimport 'prismjs/components/prism-sass';\nimport 'prismjs/components/prism-scss';\nimport 'prismjs/components/prism-bash';\n\ndeclare var Prism: any;\n\n@Injectable()\nexport class HighlightService {\n\n    constructor(@Inject(PLATFORM_ID) private platformId: any) { }\n\n    highlightAll() {\n        if (isPlatformBrowser(this.platformId)) {\n            Prism.highlightAll();\n        }\n    }\n}\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\n\nimport { Component, NgZone } from '@angular/core';\nimport { BusStore, EventBus } from '@vmw/transport';\nimport { FabricConnectionState } from '@vmw/transport/fabric.api';\nimport { LogLevel } from '@vmw/transport/log';\nimport { BusUtil } from '@vmw/transport/util/bus.util';\nimport { GeneralUtil } from '@vmw/transport/util/util';\n\n// Called when connected to broker\nconst connectedHandler = (sessionId: string) => {\n    BusUtil.getBusInstance().logger.info(`Connected to Broker with sessionId ${sessionId}`, 'main.ts');\n};\n\n// Called when disconnected.\nconst disconnectedHandler = () => {\n    BusUtil.getBusInstance().logger.info('Disconnected from Broker.', 'main.ts');\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n    private connectionStore: BusStore<any>;\n\n    constructor(private ngZone: NgZone) {\n        this.initBus();\n        this.createStores();\n        this.connectToFabric();\n\n    }\n\n    initBus(): void {\n        const bus = BusUtil.bootBusWithOptions(LogLevel.Debug, false, true);\n        bus.setNgZoneRef(this.ngZone);\n    }\n\n    connectToFabric(): void {\n        const bus: EventBus = BusUtil.getBusInstance();\n        // Connect to Broker.\n        bus.fabric.connect(connectedHandler, disconnectedHandler, 'transport-bus.io', 443, '/ws', true);\n        this.connectionStore.put('connecting', true, null);\n\n        // listen for connection state changes\n        bus.fabric.whenConnectionStateChanges(GeneralUtil.getFabricConnectionString('transport-bus.io', 443, '/ws'))\n            .subscribe(\n                (stateChange: FabricConnectionState) => {\n                    switch (stateChange) {\n                        case FabricConnectionState.Connected:\n                            this.connectionStore.put('connected', true, null);\n                            this.connectionStore.put('connecting', false, null);\n                            break;\n\n                        case FabricConnectionState.Disconnected:\n                            this.connectionStore.put('connected', false, null);\n                            this.connectionStore.put('connecting', false, null);\n                            break;\n\n                        case FabricConnectionState.Failed:\n                            this.connectionStore.put('failed', true, null);\n                            this.connectionStore.put('connecting', false, null);\n                            break;\n                    }\n                }\n            );\n    }\n\n    createStores(): void {\n        let state: Map<string, boolean> = new Map();\n        state.set('connected', false)\n        state.set('connecting', false)\n        state.set('failed', false)\n        this.connectionStore = BusUtil.getBusInstance().stores.createStore('connectionState', state);\n        this.connectionStore.initialize();\n    }\n  title = 'documentation';\n}\n","<router-outlet></router-outlet>\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\n\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {ClarityModule} from '@clr/angular';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {WelcomeComponent} from './welcome/welcome.component';\nimport {TransportHeroAnimationComponent} from './transport-hero-animation/transport-hero-animation.component';\nimport {AboutComponent} from './about/about.component';\nimport {SharedModule} from \"./shared/shared.module\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        WelcomeComponent,\n        TransportHeroAnimationComponent,\n        AboutComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        ClarityModule,\n        BrowserAnimationsModule,\n        SharedModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {ChangeDetectorRef, Component, OnDestroy, OnInit} from '@angular/core';\nimport {BaseComponent} from '../../models/base.component';\nimport {VERSION} from '@vmw/transport-docs/environments/version';\nimport {BusStore, StoreStream} from '@vmw/transport';\nimport {FabricConnectionState} from \"@vmw/transport/fabric.api\";\n\n@Component({\n    selector: 'transport-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent extends BaseComponent implements OnInit, OnDestroy {\n\n    public date = new Date().getFullYear();\n    public version = VERSION;\n    public buildTime = Date.parse(VERSION.time);\n\n    public connectionState = 'Disconnected from broker';\n    public connected = false;\n    public connecting = false;\n    public connectionFailed = false;\n    public connectionStateStore: BusStore<boolean>;\n    public connectionClass = 'label-warning';\n\n    private connectionStateStream: StoreStream<boolean>;\n    private disconnectStateStream: StoreStream<boolean>;\n\n    constructor(private cd: ChangeDetectorRef) {\n        super('FooterComponent');\n    }\n\n    private setConnected(): void {\n        this.connected = true;\n        this.connecting = false;\n        this.connectionClass = 'label-success';\n        this.connectionState = 'Connected to transport-bus.io';\n        this.cd.detectChanges();\n    }\n\n    private setConnecting(): void {\n        this.connected = false;\n        this.connecting = true;\n        this.connectionClass = 'label-warning';\n        this.connectionState = 'Connecting to transport-bus.io';\n        this.cd.detectChanges();\n    }\n\n    private setDisconnected(): void {\n        this.connected = false;\n        this.connecting = false;\n        this.connectionClass = 'label-warning';\n        this.connectionState = 'Disconnected from transport-bus.io';\n        this.cd.detectChanges();\n    }\n\n    private setConnectError(): void {\n        this.connected = false;\n        this.connecting = false;\n        this.connectionFailed = true;\n        this.connectionClass = 'label-danger';\n        this.connectionState = 'Unable to connect to transport-bus.io';\n        this.cd.detectChanges();\n    }\n\n    ngOnDestroy(): void {\n\n    }\n\n    ngOnInit(): void {\n        this.connectionStateStore = this.storeManager.getStore('connectionState');\n        this.connecting = this.connectionStateStore.get('connecting');\n        this.connected = this.connectionStateStore.get(FabricConnectionState.Connected);\n        this.connectionFailed = this.connectionStateStore.get(FabricConnectionState.Failed);\n\n        this.listenForStateChanges();\n\n        if (this.connecting) {\n           this.setConnecting();\n        }\n\n        if (this.connected) {\n            this.setConnected();\n        } else {\n            this.setConnected();\n        }\n\n        if (this.connectionFailed) {\n            this.setConnectError();\n        }\n        this.listenForStateChanges();\n    }\n\n    listenForStateChanges(): void {\n        this.connectionStateStream = this.connectionStateStore.onChange(FabricConnectionState.Connected);\n        this.connectionStateStream.subscribe(\n            (connected) => {\n                if (connected) {\n                    this.setConnected();\n                } else {\n                    this.setDisconnected();\n                }\n            }\n        );\n\n\n        this.disconnectStateStream = this.connectionStateStore.onChange(FabricConnectionState.Failed);\n        this.disconnectStateStream.subscribe(\n            () => {\n                this.setConnectError()\n            }\n        );\n    }\n\n}\n","<footer id=\"footer\">\n  &copy; {{date}} VMware Inc.\n   <span class=\"build-version\">\n        Commit Hash: {{version.hash}} | Version: {{version.version}} | Built: {{buildTime | date:'short'}} EST\n    </span>\n    <section class=\"connection-status\">\n        <span class=\"label {{connectionClass}}\">{{connectionState}}</span>\n    </section>\n</footer>\n\n","// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\n/* tslint:disable */\nexport const VERSION = {\n    \"dirty\": false,\n    \"raw\": \"b451daa\",\n    \"hash\": \"b451daa\",\n    \"distance\": null,\n    \"tag\": null,\n    \"semver\": null,\n    \"suffix\": \"b451daa\",\n    \"semverString\": null,\n    \"version\": \"1.1.0\",\n    \"time\": \"2021-08-27T17:31:45.936Z\"\n};\n/* tslint:enable */\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {WelcomeComponent} from './welcome/welcome.component';\nimport {AboutComponent} from \"./about/about.component\";\nimport {IframeDemoComponent} from \"@vmw/transport-docs/typescript/iframes/iframe-demo/iframe-demo.component\";\n\nconst routes: Routes = [\n    {path: '', component: WelcomeComponent},\n    {path: 'about', component: AboutComponent},\n    { path: 'ts', loadChildren: () => import('./typescript/typescript.module').then(m => m.TypescriptModule) },\n    { path: 'java', loadChildren: () => import('./java/java.module').then(m => m.JavaModule) },\n    { path: 'golang', loadChildren: () => import('./golang/golang.module').then(m => m.GolangModule) },\n    {path: 'iframe-demo', component: IframeDemoComponent},\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {relativeLinkResolution: 'legacy'})],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\nimport {BusUtil} from \"@vmw/transport/util/bus.util\";\nimport {LogLevel} from \"@vmw/transport/log\";\nimport {FabricConnectionState} from \"@vmw/transport/fabric.api\";\nimport {BusStore} from \"@vmw/transport\";\nimport {GeneralUtil} from \"@vmw/transport/util/util\";\nimport {FabricApiImpl} from \"@vmw/transport/fabric/fabric\";\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}