{"version":3,"sources":["./src/app/golang/hello-world/hello-world.component.ts","./src/app/golang/hello-world/hello-world.component.html","./src/app/golang/initializing/initializing.component.ts","./src/app/golang/initializing/initializing.component.html","./src/app/golang/overview/overview.component.ts","./src/app/golang/overview/overview.component.html","./src/app/golang/golang.component.ts","./src/app/golang/golang.component.html","./src/app/golang/importing/importing.component.ts","./src/app/golang/importing/importing.component.html","./src/app/golang/golang.module.ts","./src/app/golang/golang-routing.module.ts"],"names":[],"mappings":"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","file":"golang-golang-module.js","sourcesContent":["/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {AfterViewChecked, Component, OnInit} from '@angular/core';\nimport {HighlightService} from \"@vmw/transport-docs/services/highlight.service\";\n\n@Component({\n  selector: 'transport-hello-world',\n  templateUrl: './hello-world.component.html',\n  styleUrls: ['./hello-world.component.scss']\n})\nexport class HelloWorldComponent implements OnInit, AfterViewChecked {\n    constructor(private highlightService: HighlightService) {}\n    public highlighted = false;\n\n    ngOnInit() {\n    }\n\n    ngAfterViewChecked() {\n        if (!this.highlighted) {\n            this.highlightService.highlightAll();\n            this.highlighted = true;\n\n        }\n    }\n}\n","<h1>Hello World in Golang</h1>\n\n<p>\n    This is a very simple example, but it should shows the mechanics of how it works. These segments of code could be anywhere in your code base,\n    it would work exactly the same.\n</p>\n<br/>\n<pre class=\"code\"><code class=\"language-go\" ngNonBindable>// listen for a single request on 'some-channel'\ntr := bus.GetBus()\nchannel := \"hello-world\"\n\n// create new channel\ntr.GetChannelManager().CreateChannel(channel)\n\n// listen for a single request on 'hello-world'\nrequestHandler, _ := tr.ListenRequestStream(channel)\n\n// define request handler logic\nrequestHandler.Handle(\n   func(msg *model.Message) &#123;\n        resp := msg.Payload.(string)\n        fmt.Printf(\"\\\\nHello: %s\\\\n\", resp)\n\n        // send a response back.\n        tr.SendResponseMessage(channel, resp + \" Doodly\", msg.DestinationId)\n   &#125;,\n   func(err error) &#123;\n        // something went wrong...\n   &#125;\n)\n\n// send a request to 'hello-world' and handle a single response\nresponseHandler, _ := tr.RequestOnce(channel, \"Howdy\")\n\n// define response handler logic\nresponseHandler.Handle(\n   func(msg *model.Message) &#123;\n        fmt.Printf(\"World: %s\\\\n\", msg.Payload.(string))\n   &#125;,\n   func(err error) &#123;\n        // something went wrong...\n   &#125;)\n\n// fire the request.\nresponseHandler.Fire()\n</code></pre>\n\n<p>\n    This will produce something like...\n</p>\n\n<pre class=\"log-output\">ðŸŒˆ Transport booted with id [e495e5d5-2b72-46dd-8013-d49049bd4800]\nHello: Howdy\nWorld: Howdy Doodly\n</pre>\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {AfterViewChecked, Component, OnInit} from '@angular/core';\nimport {HighlightService} from \"@vmw/transport-docs/services/highlight.service\";\n\n@Component({\n  selector: 'transport-initializing',\n  templateUrl: './initializing.component.html',\n  styleUrls: ['./initializing.component.scss']\n})\nexport class InitializingComponent implements OnInit, AfterViewChecked {\n    constructor(private highlightService: HighlightService) {}\n    public highlighted = false;\n\n    ngOnInit() {\n    }\n\n    ngAfterViewChecked() {\n        if (!this.highlighted) {\n            this.highlightService.highlightAll();\n            this.highlighted = true;\n\n        }\n    }\n}\n","<h1>Initializing Transport in Golang</h1>\n\n<p>\n    The bus exists as a singleton inside your application. The first time you ask for the bus, it will be created automatically and every supplemental call will return that same instance.\n</p>\n<br/>\n<pre class=\"code\"><code class=\"language-go\" ngNonBindable>import \"github.com/vmware/transport-go/bus\"\n\nvar transport EventBus = bus.GetBus()</code></pre>\n\n<hr/>\n<a routerLink=\"/golang/hello-world\" class=\"btn btn-primary btn-block btn-outline\">Next Steps: Hello World</a>\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport {HighlightService} from \"@vmw/transport-docs/services/highlight.service\";\nimport {goTerminalCommands, javaTerminalCommands, tsTerminalCommands} from \"@vmw/transport-docs/shared/model\";\nimport {TermCommand} from \"@vmw/transport-docs/welcome/welcome.component\";\nimport {BaseComponent} from \"@vmw/transport-docs/base.component\";\n\n@Component({\n  selector: 'transport-golang-overview',\n  templateUrl: './overview.component.html',\n  styleUrls: ['./overview.component.scss']\n})\nexport class OverviewComponent extends BaseComponent implements OnInit {\n\n    public goCommands: Array<TermCommand>;\n    public highlighted = false;\n\n    constructor(private highlightService: HighlightService) {\n        super('OverviewComponent');\n    }\n\n    highlight() {\n        this.highlightService.highlightAll();\n    }\n\n    ngOnInit(): void {\n        this.goCommands = goTerminalCommands;\n\n    }\n\n    ngAfterViewChecked() {\n        if (!this.highlighted) {\n            this.highlightService.highlightAll();\n            this.highlighted = true;\n        }\n    }\n\n}\n","<h1>Transport for Go</h1>\n<img src=\"assets/github.png\" alt=\"github\" title=\"transport on github\" class=\"github-logo\"/>\n<a href=\"https://github.com/vmware/transport-go\">View Golang source on Github</a>\n<br/>\n<br/>\n<div class=\"alert alert-info\" role=\"alert\">\n    <div class=\"alert-items\">\n        <div class=\"alert-item static\">\n            <div class=\"alert-icon-wrapper\">\n                <clr-icon class=\"alert-icon\" shape=\"exclamation-circle\"></clr-icon>\n            </div>\n            <span class=\"alert-text\">\n                    We're still working on these docs, please bear with us!\n            </span>\n        </div>\n    </div>\n</div>\n\n<p>\n    This implementation is written in Go. It does not use ReactiveX (unlike the Java and TypeScript) implementations. This is because there is no (reasonable) ReactiveX library available. So we built our own directly into Transport.\n</p>\n\n<section *ngFor=\"let cmd of goCommands; index as i\">\n    <h4 class=\"code-step\">{{cmd.title}}</h4>\n    <transport-animated-console [inputCommand]=\"cmd.command\"\n                                [helperTxt]=\"cmd.notes\"\n                                [consoleTheme]=\"'macOS'\"\n                                [loopAnimation]=\"false\"\n                                [delay]=\"i * 1000\">\n    </transport-animated-console>\n</section>\n\n\n<hr/>\n<a routerLink=\"/golang/importing\" class=\"btn btn-primary btn-block btn-outline\">Next Steps: Importing Transport</a>\n\n\n\n\n\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'transport-golang',\n  templateUrl: './golang.component.html',\n  styleUrls: ['./golang.component.scss']\n})\nexport class GolangComponent implements OnInit {\n\n    @ViewChild(\"mainContent\")\n    private mainContentDiv!: ElementRef<HTMLElement>;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    onActivate(_event: any): void {\n        // Scrolling back to the top\n        // Reference: https://stackoverflow.com/questions/48048299/angular-5-scroll-to-top-on-every-route-click/48048822\n        if (this.mainContentDiv) {\n            (this.mainContentDiv.nativeElement as HTMLElement).scrollTop = 0;\n        }\n    }\n}\n","<clr-main-container>\n    <transport-header></transport-header>\n    <div class=\"content-container\">\n        <clr-vertical-nav [clrVerticalNavCollapsible]=\"false\" [clr-nav-level]=\"2\">\n            <a clrVerticalNavLink routerLink=\"./overview\" routerLinkActive=\"active\">\n                Golang Overview\n            </a>\n\n            <clr-vertical-nav-group routerLinkActive=\"active\">\n                Getting Started\n                <clr-vertical-nav-group-children *clrIfExpanded=\"true\">\n                    <a clrVerticalNavLink routerLink=\"./importing\" routerLinkActive=\"active\">\n                        Importing Transport\n                    </a>\n                    <a clrVerticalNavLink routerLink=\"./initializing\" routerLinkActive=\"active\">\n                        Initializing Transport\n                    </a>\n                    <a clrVerticalNavLink routerLink=\"./hello-world\" routerLinkActive=\"active\">\n                        Hello World!\n                    </a>\n                </clr-vertical-nav-group-children>\n            </clr-vertical-nav-group>\n\n\n        </clr-vertical-nav>\n        <div class=\"content-area\" id=\"main-content\" #mainContent>\n            <router-outlet (activate)=\"onActivate($event)\"></router-outlet>\n        </div>\n    </div>\n    <transport-footer></transport-footer>\n</clr-main-container>\n\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {AfterViewChecked, Component, OnInit} from '@angular/core';\nimport {HighlightService} from \"@vmw/transport-docs/services/highlight.service\";\n\n@Component({\n  selector: 'transport-importing',\n  templateUrl: './importing.component.html',\n  styleUrls: ['./importing.component.scss']\n})\nexport class ImportingComponent implements OnInit, AfterViewChecked {\n    constructor(private highlightService: HighlightService) {}\n    public highlighted = false;\n\n    ngOnInit() {\n    }\n\n    ngAfterViewChecked() {\n        if (!this.highlighted) {\n            this.highlightService.highlightAll();\n            this.highlighted = true;\n\n        }\n    }\n}\n","<h1>Importing Transport in Golang</h1>\n\n<p>\n    The Go version of Transport has go.mod support. You should be able to easily add it using <code class=\"clr-code\">go get</code>\n</p>\n\n<h3>use <code class=\"clr-code\">go get</code></h3>\n<br/>\n<transport-animated-console [inputCommand]=\"'go get github.com/vmware/transport-go/...'\"\n                            [consoleTheme]=\"'macOS'\"\n                            [loopAnimation]=\"false\"\n                            [delay]=\"1\">\n</transport-animated-console>\n\n<h3>Adding to your app</h3>\n<br/>\n<pre class=\"code\"><code class=\"language-go\" ngNonBindable>import \"github.com/vmware/transport-go/bus\"</code></pre>\n\n<hr/>\n<a routerLink=\"/golang/initializing\" class=\"btn btn-primary btn-block btn-outline\">Next Steps: Initializing Transport</a>\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {GolangRoutingModule} from './golang-routing.module';\nimport {SharedModule} from \"@vmw/transport-docs/shared/shared.module\";\nimport {ClarityModule} from \"@clr/angular\";\nimport {OverviewComponent} from './overview/overview.component';\nimport {GolangComponent} from './golang.component';\nimport { ImportingComponent } from './importing/importing.component';\nimport { InitializingComponent } from './initializing/initializing.component';\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\n\n\n@NgModule({\n    declarations: [OverviewComponent, GolangComponent, ImportingComponent, InitializingComponent, HelloWorldComponent],\n    imports: [\n        CommonModule,\n        GolangRoutingModule,\n        SharedModule,\n        CommonModule,\n        ClarityModule,\n    ]\n})\nexport class GolangModule {\n}\n","/*\n * Copyright 2021 VMware, Inc.\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {GolangComponent} from \"@vmw/transport-docs/golang/golang.component\";\nimport {OverviewComponent} from \"@vmw/transport-docs/golang/overview/overview.component\";\nimport {InitializingComponent} from \"@vmw/transport-docs/golang/initializing/initializing.component\";\nimport {ImportingComponent} from \"@vmw/transport-docs/golang/importing/importing.component\";\nimport {HelloWorldComponent} from \"@vmw/transport-docs/golang/hello-world/hello-world.component\";\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: GolangComponent,\n        children: [\n            {path: '', component: OverviewComponent},\n            {path: 'overview', component: OverviewComponent},\n            {path: 'initializing', component: InitializingComponent},\n            {path: 'importing', component: ImportingComponent},\n            {path: 'hello-world', component: HelloWorldComponent},\n        ]\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GolangRoutingModule { }\n"],"sourceRoot":"webpack:///"}